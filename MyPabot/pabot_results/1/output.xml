<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.8.1 on darwin)" generated="20201125 20:01:27.163" rpa="false">
<suite id="s1" name="Test" source="/Users/fcarlossbr.ibm.com/PycharmProjects/UNISAL/MyPabot/test">
<suite id="s1-s1" name="Test Acquire Lock2" source="/Users/fcarlossbr.ibm.com/PycharmProjects/UNISAL/MyPabot/test/test_acquire_lock2.robot">
<test id="s1-s1-t1" name="Wait For 3s">
<kw name="Acquire Lock" library="pabot.PabotLib">
<doc>Wait for a lock with name.
[https://pabot.org/PabotLib.html?ref=log#acquire-lock|Open online docs.]</doc>
<arguments>
<arg>Lock On 3s</arg>
</arguments>
<status status="PASS" starttime="20201125 20:01:27.296" endtime="20201125 20:01:27.309"></status>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${APPLICATION} wait_for_3s</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201125 20:01:27.326" level="INFO">Running command 'python3 wait.py wait_for_3s 2&gt;&amp;1'.</msg>
<msg timestamp="20201125 20:01:27.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20201125 20:01:27.395" level="INFO">${output} = ['wait.py', 'wait_for_3s'] 2</msg>
<status status="PASS" starttime="20201125 20:01:27.311" endtime="20201125 20:01:27.395"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20201125 20:01:27.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20201125 20:01:27.396" endtime="20201125 20:01:27.396"></status>
</kw>
<kw name="Release Lock" library="pabot.PabotLib">
<doc>Release a lock with name.
[https://pabot.org/PabotLib.html?ref=log#release-lock|Open online docs.]</doc>
<arguments>
<arg>Lock On 3s</arg>
</arguments>
<status status="PASS" starttime="20201125 20:01:27.396" endtime="20201125 20:01:27.398"></status>
</kw>
<doc>Just call the function wait_for_3s</doc>
<tags>
<tag>lock</tag>
</tags>
<status status="PASS" starttime="20201125 20:01:27.295" endtime="20201125 20:01:27.398" critical="yes"></status>
</test>
<doc>Test the function wait_for_3s of the wait.py Python script in combination with a Lock</doc>
<status status="PASS" starttime="20201125 20:01:27.227" endtime="20201125 20:01:27.399"></status>
</suite>
<status status="PASS" starttime="20201125 20:01:27.166" endtime="20201125 20:01:27.401"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">lock</stat>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="Test">Test</stat>
<stat pass="1" fail="0" id="s1-s1" name="Test Acquire Lock2">Test.Test Acquire Lock2</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
